#!/usr/bin/env bash
#
# Takes the WAV files generated by the ripper
#   and turns them into cute little MP3s, with
#   a little help from the user.
#

istype ()
{
  [ -n "$(file "$1" | grep "$2")" ]
  return $?
}

echo -n "Is this an audiobook? [y/n]: "
while true
do
  if ! read abook
  then
    echo "Unexpected EOF"
    exit 1
  fi
  if [ "$abook" == "y" ]
  then
    abook=true
    break
  fi
  if [ "$abook" == "n" ]
  then
    abook=false
    break
  fi
  echo "Invalid response- please answer either the letter 'y' or the letter 'n'"
  echo -n "Is this an audiobook? [y/n]: "
done

i=1

if file *.inf >/dev/null
then
  echo -n "Removing .inf files... "
  if rm *.inf
  then
    echo "success"
  else
    echo "command 'rm *.inf' failed"
  fi
fi

for file in $(ls)
do
  istype "$file" WAV || continue
  ask ()
  {
    echo -n "What is the title of track '$file'? (skip): "
  }
  ask
  title=$i
  $abook && echo $i
  if ! $abook && ! read title
  then
    echo "Unexpected EOF" >&2
    echo
    exit 1
  else 
    if [ -z "$title" ]
    then
      echo "Skipping..."
    else
      fmt ()
      {
        # Remove tabs, make spaces underscores
        tr -d "\t" | tr ' ' '_'
      }
      mp3="$(echo -n "$title" | fmt).mp3"
      echo $FIXT
      if lame -h -b 128 --tt "$title" "$file" "$mp3"
      then
        echo "Yay! Successful translate!"
        echo -n "Removing old file... "
        if rm "$file"
        then
          echo "success"
        else
          echo "failed to remove '$file'" >&2
        fi
      else
        echo "Failed to write mp3 version of '$title'; leaving '$file' intact." >&2
      fi
    fi
  fi
  $abook && ((i=i+1))
done
echo "Finished processing. Terminating successfully."

